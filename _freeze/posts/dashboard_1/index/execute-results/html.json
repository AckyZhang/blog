{
  "hash": "2a084a3f68455f72e8cfb6ab4aee4f37",
  "result": {
    "markdown": "---\ntitle: \"Dashboard_1\"\nauthor: \"Jiajun Zhang\"\ndate: \"2023-11-04\"\ncategories: [code, analysis]\nimage: \"image.jpg\"\n---\n\n\nPopulation figures for countries, regions (e.g. Asia) and the world.\n\nData from <a href= \"https://datahub.io/core/population\">datahub.io</a>\n\nData comes originally from World Bank and has been converted into standard CSV. Data\n\n<h3>Load packages and data</h3>\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(magrittr)\npop_data <- read.csv(\"population_csv.csv\")\n```\n:::\n\n\n<h3>Show the world population by year</h3>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the Data\npop_all <- pop_data %>%\n    filter(Country.Code == \"WLD\")\n\n# Visualize\nggplot(pop_all, aes(x = Year, y = Value)) + \n  geom_line() + \n  theme_minimal() +\n  labs(title = \"World Population\", x = \"Year\", y = \"Population\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/world-population-1.png){width=672}\n:::\n:::\n\n\n<h3>Show the US population growth per year by percentage</h3>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the Data\npop_USA <- pop_data %>%\n    filter(Country.Code == \"USA\")%>%\n    mutate(percentage = c(0,(diff(Value) /head(Value, -1))*100))\n\n# Visualize\nggplot(pop_USA, aes(x = Year, y = percentage)) + \n  geom_line() + \n  theme_minimal() +\n  labs(title = \"US Population\", x = \"Year\", y = \"Population Growth(%)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/USA-population-growth-1.png){width=672}\n:::\n:::\n\n\n<h3>Linear model prediction for Chinese population next 10 years</h3>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the Data\npop_CHN <- pop_data %>%\n    filter(Country.Code == \"CHN\")\nYear <- pop_CHN$Year\nValue <- pop_CHN$Value\n\n# Predict\nmodel <- lm(Value ~ Year, data=pop_CHN)\nfuture_years <- data.frame(Year=seq(max(Year)+1, max(Year)+10, 1))\npredictions <- predict(model, newdata = future_years)\nprint(predictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         1          2          3          4          5          6          7 \n1480990637 1494269723 1507548809 1520827896 1534106982 1547386068 1560665154 \n         8          9         10 \n1573944241 1587223327 1600502413 \n```\n:::\n:::\n\n\n<h3>Pie chart for China, Japan,and South Korea population in East Asia & Pacific in 2015</h3>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Get 2015 data\npop_data2015 <- pop_data %>%\n    filter(Year == 2015)\npop_CJK2015 <- pop_data2015 %>%\n    filter(Country.Code == \"CHN\" | Country.Code == \"JPN\" | Country.Code == \"KOR\")\npop_EAS2015 <- pop_data2015 %>%\n    filter(Country.Code == \"EAS\")\n\npop_Other <- pop_EAS2015$Value - sum(pop_CJK2015$Value)\n# Catagorize pie data\npie_data <- rbind(pop_CJK2015, data.frame(Country.Name = \"Other\", Country.Code = \"OTH\", Year = 2015 ,Value = pop_Other))\n# Draw pie chart\nggplot(pie_data, aes(x = \"\", y = Value, fill = Country.Name)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  labs(fill = \"Country\", title = \"Population_distribution\") +\n  scale_fill_brewer(palette = \"Pastel1\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Pie-Chart-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}